<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/redis
       http://www.springframework.org/schema/redis/spring-redis-1.0.xsd">


    <!-- scanner redis properties -->
    <context:property-placeholder location="classpath:properties/redis.properties" />
    <!-- 注意此处注入的是JedisPoolConfig，说明SDR还依赖与Jedis -->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!--<property name="maxActive" value="${redis.maxActive}" />-->
        <!--<property name="maxWait" value="${redis.maxWait}" />-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>

    <bean id="redisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >
        <property name="hostName" value="${redis.host}"/>
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.pass}"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <!--如果不配置Serializer，那么存储的时候智能使用String，如果用User类型存储，那么会提示错误User can't cast to String！！！ -->
        <!--<property name="keySerializer">-->
            <!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
        <!--</property>-->
        <property name="valueSerializer" ref="jdkSerializer" />
            <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
            <!--<bean class="org.springframework.data.redis.serializer.OxmSerializer"/>-->
        <!--</property>-->
    </bean>
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <constructor-arg ref="redisConnectionFactory"/>
    </bean>

    <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" />-->
    <bean id="jdkSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />

    <redis:listener-container>
        <redis:listener ref="messageDelegateListener" method="handleMessage" topic="java" serializer="jdkSerializer"/>
    </redis:listener-container>

</beans>